name: CI - Build and Publish Worker Docker Image

on:
  push:
    branches:
      - master  # Execute a pipeline quando houver push na branch principal

env:
  csproj: MyWorker.csproj
  IMAGE_NAME: myworker
  IMAGE_TAG: latest

jobs:
  build:
    runs-on: ubuntu-latest  # Executa em uma máquina virtual com Ubuntu
    
    steps:
    
    # Etapa 1: Checkout do código
    - name: Checkout code
      uses: actions/checkout@v3

    # Etapa 2: Build da imagem Docker
    - name: Build Docker image
      run: |
        docker build --build-arg CSPROJ="$CSPROJ" -t $IMAGE_NAME:$IMAGE_TAG .

    # Etapa 3: Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Etapa 4: Push da imagem Docker
    - name: Push Docker image
      run: |
        docker tag $IMAGE_NAME:$IMAGE_TAG ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:$IMAGE_TAG
        docker push ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:$IMAGE_TAG

    # Etapa 5: Install Trivy
    - name: Install Trivy
      run: |
        curl -sSfL https://github.com/aquasecurity/trivy/releases/download/v0.38.3/trivy_0.38.3_Linux-64bit.deb -o trivy.deb
        sudo dpkg -i trivy.deb
        sudo apt-get update

    # Etapa 6: Run Trivy to scan Docker image for vulnerabilities
    - name: Run Trivy to scan Docker image for vulnerabilities
      run: |
        trivy image --format json --output trivy-report.json ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:$IMAGE_TAG

    # Etapa 7: Create GitHub Issue with Trivy report
    - name: Create GitHub Issue with Trivy report
      uses: peter-evans/create-issue@v3
      with:
        title: "Trivy Security Scan Report for ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:$IMAGE_TAG"
        body: |
          **Relatório de Vulnerabilidades do Trivy para a imagem ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:$IMAGE_TAG:**

          **Relatório JSON:**
          
          ```json
          $(cat trivy-report.json)
          ```

        labels: security, bug  # Tags para categorizar a issue como um problema de segurança